1)

import threading

def thread_function(name, start, end):
    for i in range(start, end + 1):
        print(f"{name}: {i}")

# Criando as threads
thread1 = threading.Thread(target=thread_function, args=("Thread 1", 1, 5))
thread2 = threading.Thread(target=thread_function, args=("Thread 2", 1, 5))

# Iniciando as threads
thread1.start()
thread2.start()

# Aguardando as threads terminarem
thread1.join()
thread2.join()

print("Programa encerrado.")



2)

import threading

# Variável global
global_var = 0

def thread_function():
    global global_var
    for _ in range(100):
        global_var += 1

# Criando as threads
thread1 = threading.Thread(target=thread_function)
thread2 = threading.Thread(target=thread_function)

# Iniciando as threads
thread1.start()
thread2.start()

# Aguardando as threads terminarem
thread1.join()
thread2.join()

print(f"Valor final da variável global: {global_var}")


3)

import threading
import queue
import random
import time

# Fila para armazenar os números aleatórios
num_queue = queue.Queue()

def producer_thread():
    while True:
        num = random.randint(1, 100)
        num_queue.put(num)
        print(f"Produzido: {num}")
        time.sleep(1)

def consumer_thread():
    while True:
        num = num_queue.get()
        print(f"Consumido: {num}")
        time.sleep(2)

# Criando e iniciando as threads
producer = threading.Thread(target=producer_thread)
consumer = threading.Thread(target=consumer_thread)

producer.start()
consumer.start()


4)

import threading
import time
import random

def thread_function(thread_num):
    sleep_time = random.randint(1, 5)  # Tempo de espera aleatório entre 1 e 5 segundos
    print(f"Thread {thread_num} iniciou. Esperando {sleep_time} segundos.")
    time.sleep(sleep_time)
    print(f"Thread {thread_num} terminou.")

# Criando as cinco threads
threads = []
for i in range(5):
    thread = threading.Thread(target=thread_function, args=(i+1,))
    threads.append(thread)
    thread.start()

# Aguardando as threads terminarem
for thread in threads:
    thread.join()

print("Todas as threads terminaram.")
